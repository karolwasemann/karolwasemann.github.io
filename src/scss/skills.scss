@import "variables.scss";

main {
    padding-top: 2rem;
    min-height: 100vh;
    background: white;
    color: black;
    background: whitesmoke;

    .skills {
        @media screen and (min-width: 1024px) {
            display: grid;
            grid-template-columns: 1fr 1fr;

        }
    }

    .anima {
        @media screen and (min-width: 1024px) {
            grid-column: 1/3;
        }
    }

    .skill {
        margin: 0 auto 2rem;
        background: rgb(254, 254, 254);

        width: 80%;
        border-radius: $font-xl;
        padding: $font-xl $font-s;

        // background-image: linear-gradient(120deg, #eb4f56, #9d66e9);

        @media screen and (min-width: 768px) {
            padding: $font-xxl $font-xl;
        }

        h2 {
            font-size: $font-xxl;

        }

        p {
            margin-top: $font-xxl;
        }

        figure {
            width: 254px;
            margin: 5rem auto;
            height: 200px;
            background-image: url(../images/monitorr.png);
            background-size: contain;
            background-repeat: no-repeat;
            position: relative;

            @media screen and (min-width: 768px) {
                transform: scale(1.4);
            }

            @media screen and (min-width: 1024px) {
                transform: scale(1.8);
                margin: 10rem auto;
            }

            .wall {
                position: absolute;
                top: 0;
                left: 0;
                background: black;
                width: 250px;
                height: 146px;
                overflow: hidden;

            }

            ul {
                position: absolute;
                top: 0;
                left: 0;
                display: flex;
                justify-content: flex-start;
                align-items: center;
                height: 146px;

                &.train {
                    transform: translateX(250px);
                    animation: train 15s linear infinite;
                }

                &.waterfall {
                    flex-direction: column;
                    height: 1460px;
                    transform: translateY(146px);
                    animation: waterfall 15s linear infinite;
                }

                li {
                    width: 250px;
                    height: 146px;
                    font-size: 28px;
                    background: transparent;
                    color: whitesmoke;
                    border-radius: .2rem;
                    list-style: none;
                    display: flex;
                    justify-content: center;
                    align-items: center;

                }
            }


        }
    }

    pre {

        margin-top: 4rem;
        font-size: $font-xs;

        @media screen and (min-width: 768px) {
            font-size: $font-l;
            margin-left: 2rem;
        }

        @media screen and (min-width: 1024px) {
            font-size: $font-xl;

        }

        span {
            color: red;
            font-size: $font-xs;

            @media screen and (min-width: 768px) {
                font-size: $font-l;
                margin-left: 2rem;
            }

            @media screen and (min-width: 1024px) {
                font-size: $font-xl;
            }
        }
    }



    span.shot {
        display: block;
        margin: 5rem auto 2rem;

        width: 90%;
        border: .2rem solid black;
        border-bottom: 10px solid black;
        border-radius: .4rem;
        overflow: hidden;

        img {
            width: 100%;
            transition: transform .3s;

        }

        &:hover img {
            transform: translate(-240px, 50px) scaleX(2) scaleY(1.8);
        }
    }
}




@keyframes train {
    from {
        transform: translateX(250px);
    }

    to {
        transform: translateX(-100%);
    }
}

@keyframes waterfall {
    from {
        transform: translateY(146px);
    }

    to {
        transform: translateY(-100%);
    }
}



// @mixin add-move-animation {
//     animation-name: move-txt;
//     animation-timing-function: linear;
//     animation-fill-mode: forwards;
//     animation-direction: alternate;
//     // animation-iteration-count: infinite;
// }

// @for $i from 1 through 10 {

//     li:nth-child(#{$i}) {
//         animation-duration: $i+s;

//         // @if (($i % 3)==0) {
//         //     transform: translateY(-100% *$i);
//         //     animation-duration: $i+s;
//         // }

//         @include add-move-animation();
//     }


// }